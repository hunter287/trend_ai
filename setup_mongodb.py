"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MongoDB
"""

import subprocess
import sys
import os

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
        print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå {description} - –æ—à–∏–±–∫–∞: {e}")
        print(f"   –í—ã–≤–æ–¥: {e.stdout}")
        print(f"   –û—à–∏–±–∫–∞: {e.stderr}")
        return False

def install_mongodb():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ MongoDB"""
    print("üì¶ –£–°–¢–ê–ù–û–í–ö–ê MONGODB")
    print("="*40)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã
    if not run_command("sudo apt-get update", "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤"):
        return False
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MongoDB
    if not run_command("sudo apt-get install -y mongodb", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ MongoDB"):
        return False
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º MongoDB
    if not run_command("sudo systemctl start mongodb", "–ó–∞–ø—É—Å–∫ MongoDB"):
        return False
    
    # –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
    if not run_command("sudo systemctl enable mongodb", "–í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ MongoDB"):
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    if not run_command("sudo systemctl status mongodb --no-pager", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ MongoDB"):
        return False
    
    print("‚úÖ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω")
    return True

def install_python_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("\nüêç –£–°–¢–ê–ù–û–í–ö–ê PYTHON –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô")
    print("="*40)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º pymongo
    if not run_command("pip install pymongo", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ pymongo"):
        return False
    
    print("‚úÖ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    return True

def test_mongodb_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB"""
    print("\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö MONGODB")
    print("="*40)
    
    test_script = """
import pymongo
try:
    client = pymongo.MongoClient("mongodb://localhost:27017/")
    db = client["test_db"]
    collection = db["test_collection"]
    
    # –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏
    test_doc = {"test": "data", "timestamp": "2024-01-01"}
    result = collection.insert_one(test_doc)
    print(f"‚úÖ –ó–∞–ø–∏—Å—å –≤ MongoDB: {result.inserted_id}")
    
    # –¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è
    found_doc = collection.find_one({"test": "data"})
    print(f"‚úÖ –ß—Ç–µ–Ω–∏–µ –∏–∑ MongoDB: {found_doc}")
    
    # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    collection.delete_one({"test": "data"})
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã")
    
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB: {e}")
    exit(1)
"""
    
    try:
        exec(test_script)
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def create_mongodb_user():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è MongoDB (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"""
    print("\nüë§ –°–û–ó–î–ê–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø MONGODB")
    print("="*40)
    
    username = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è MongoDB (Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()
    if not username:
        print("‚è≠Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–ø—É—â–µ–Ω–æ")
        return True
    
    password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ").strip()
    if not password:
        print("‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    create_user_script = f"""
use admin
db.createUser({{
    user: "{username}",
    pwd: "{password}",
    roles: [{{ role: "readWrite", db: "instagram_gallery" }}]
}})
"""
    
    try:
        result = subprocess.run(
            ["mongosh", "--eval", create_user_script],
            capture_output=True,
            text=True
        )
        if result.returncode == 0:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —Å–æ–∑–¥–∞–Ω")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {result.stderr}")
            return False
    except FileNotFoundError:
        print("‚ö†Ô∏è  mongosh –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ–∑–¥–∞–Ω")
        return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("""
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                    üóÑÔ∏è  MONGODB SETUP                       ‚ïë
‚ïë                                                              ‚ïë
‚ïë  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ MongoDB –¥–ª—è Instagram Parser         ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    """)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ Linux
    if sys.platform != "linux":
        print("‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Linux")
        return
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MongoDB
    if not install_mongodb():
        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ MongoDB")
        return
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not install_python_dependencies():
        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if not test_mongodb_connection():
        print("‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è MongoDB")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    create_mongodb_user()
    
    print(f"\nüéâ MONGODB –ù–ê–°–¢–†–û–ï–ù –£–°–ü–ï–®–ù–û!")
    print(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
    print(f"   ‚Ä¢ URI: mongodb://localhost:27017/")
    print(f"   ‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: instagram_gallery")
    print(f"   ‚Ä¢ –ö–æ–ª–ª–µ–∫—Ü–∏—è: images")
    print(f"   ‚Ä¢ –°—Ç–∞—Ç—É—Å: –ó–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    
    print(f"\nüí° –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å Instagram Parser:")
    print(f"   python interactive_parser.py")

if __name__ == "__main__":
    main()
