"""
–†–∞–±–æ—á–∏–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Apify API

–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç:
1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API
2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
3. –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫—Ç–æ—Ä–æ–≤
4. –ó–∞–ø—É—Å–∫ –∞–∫—Ç–æ—Ä–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
"""

import os
import time
import json
from dotenv import load_dotenv
from apify_client import ApifyClient
import pandas as pd

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    # –ü–æ–ª—É—á–∞–µ–º API —Ç–æ–∫–µ–Ω
    api_token = os.getenv('APIFY_API_TOKEN')
    
    if not api_token:
        print("‚ùå API —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    client = ApifyClient(api_token)
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Apify API —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    
    # 1. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    print("\n" + "="*50)
    print("üë§ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï")
    print("="*50)
    
    try:
        user = client.user().get()
        print(f"üìß Email: {user.get('email', 'N/A')}")
        print(f"üÜî ID: {user.get('id', 'N/A')}")
        print(f"üí∞ –ú–µ—Å—è—á–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: {user.get('monthlyUsage', {}).get('compute', 0)} –µ–¥–∏–Ω–∏—Ü")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–æ—Ä–æ–≤ –≤ Store
    print("\n" + "="*50)
    print("üé≠ –ü–û–ü–£–õ–Ø–†–ù–´–ï –ê–ö–¢–û–†–´ –í APIFY STORE")
    print("="*50)
    
    try:
        # –ò—â–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞–∫—Ç–æ—Ä—ã
        actors = client.actors().list(limit=10)
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(actors.items)} –∞–∫—Ç–æ—Ä–æ–≤:")
        
        for i, actor in enumerate(actors.items[:5]):
            print(f"\n{i+1}. üé≠ {actor.get('name', 'N/A')}")
            print(f"   üÜî ID: {actor.get('id', 'N/A')}")
            print(f"   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {(actor.get('description', 'N/A') or 'N/A')[:100]}...")
            print(f"   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: {actor.get('stats', {}).get('rating', 'N/A')}")
            print(f"   üîÑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: {actor.get('stats', {}).get('totalRuns', 'N/A')}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 3. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∞–∫—Ç–æ—Ä–µ
    print("\n" + "="*50)
    print("üîç –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–û–ù–ö–†–ï–¢–ù–û–ú –ê–ö–¢–û–†–ï")
    print("="*50)
    
    # –ü–æ–ø—É–ª—è—Ä–Ω—ã–π –∞–∫—Ç–æ—Ä –¥–ª—è –≤–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥–∞
    popular_actor_id = "apify/web-scraper"
    
    try:
        actor_info = client.actor(popular_actor_id).get()
        print(f"üé≠ –ù–∞–∑–≤–∞–Ω–∏–µ: {actor_info.get('name', 'N/A')}")
        print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {(actor_info.get('description', 'N/A') or 'N/A')[:200]}...")
        print(f"üí∞ –¶–µ–Ω–∞ –∑–∞ 1000 —Å—Ç—Ä–∞–Ω–∏—Ü: ${actor_info.get('stats', {}).get('averageComputeUnits', 'N/A')}")
        print(f"üîÑ –í—Å–µ–≥–æ –∑–∞–ø—É—Å–∫–æ–≤: {actor_info.get('stats', {}).get('totalRuns', 'N/A')}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫—Ç–æ—Ä–µ: {e}")
    
    # 4. –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    print("\n" + "="*50)
    print("üìã –ü–†–ò–ú–ï–† –í–•–û–î–ù–´–• –î–ê–ù–ù–´–• –î–õ–Ø –ê–ö–¢–û–†–ê")
    print("="*50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ö–µ–º—É –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Web Scraper
        input_schema = client.actor(popular_actor_id).get().get('defaultRunOptions', {})
        print("üí° –ü—Ä–∏–º–µ—Ä –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Web Scraper:")
        print(json.dumps({
            "urls": [
                {"url": "https://example.com"}
            ],
            "linkSelector": "a[href]",
            "pageFunction": "async function pageFunction(context) {\n    return {\n        title: document.title,\n        url: window.location.href\n    };\n}",
            "maxRequestRetries": 3,
            "maxPagesPerCrawl": 10
        }, indent=2, ensure_ascii=False))
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 5. –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –∫–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–∫—Ç–æ—Ä (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)
    print("\n" + "="*50)
    print("üöÄ –ö–ê–ö –ó–ê–ü–£–°–¢–ò–¢–¨ –ê–ö–¢–û–†")
    print("="*50)
    
    print("üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–∫—Ç–æ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("""
# –ü—Ä–∏–º–µ—Ä –∑–∞–ø—É—Å–∫–∞ –∞–∫—Ç–æ—Ä–∞
input_data = {
    "urls": [{"url": "https://example.com"}],
    "maxPagesPerCrawl": 10
}

# –ó–∞–ø—É—Å–∫ –∞–∫—Ç–æ—Ä–∞ (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π)
run = client.actor('apify/web-scraper').start(input_data)
run_id = run['id']

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
while True:
    run_info = client.run(run_id).get()
    if run_info['status'] in ['SUCCEEDED', 'FAILED']:
        break
    time.sleep(10)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
if run_info['status'] == 'SUCCEEDED':
    dataset_id = run_info['defaultDatasetId']
    items = client.dataset(dataset_id).list_items().items
    print(f"–ü–æ–ª—É—á–µ–Ω–æ {len(items)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
""")

    # 6. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–≤–æ–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤
    print("\n" + "="*50)
    print("üìà –í–ê–®–ò –ù–ï–î–ê–í–ù–ò–ï –ó–ê–ü–£–°–ö–ò")
    print("="*50)
    
    try:
        runs = client.runs().list(limit=5)
        if runs.items:
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(runs.items)} –Ω–µ–¥–∞–≤–Ω–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤:")
            for i, run in enumerate(runs.items):
                print(f"\n{i+1}. üèÉ –ó–∞–ø—É—Å–∫ ID: {run.get('id', 'N/A')}")
                print(f"   üé≠ –ê–∫—Ç–æ—Ä: {run.get('actId', 'N/A')}")
                print(f"   üìä –°—Ç–∞—Ç—É—Å: {run.get('status', 'N/A')}")
                print(f"   üìÖ –î–∞—Ç–∞: {run.get('startedAt', 'N/A')}")
        else:
            print("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø—É—Å–∫–æ–≤")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
