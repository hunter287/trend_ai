"""
–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ Instagram —Å–∫—Ä–∞–ø–µ—Ä–∞ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ URL –ø—Ä–æ—Ñ–∏–ª–µ–π
"""

import os
import time
import json
from datetime import datetime
from dotenv import load_dotenv
from apify_client import ApifyClient
import pandas as pd

load_dotenv()

def run_instagram_with_urls():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Instagram —Å–∫—Ä–∞–ø–µ—Ä —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ URL –ø—Ä–æ—Ñ–∏–ª–µ–π"""
    
    client = ApifyClient(os.getenv('APIFY_API_TOKEN'))
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Apify API —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    
    # ID Instagram —Å–∫—Ä–∞–ø–µ—Ä–∞
    actor_id = "shu8hvrXbJbY3Eb9W"
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ URL –ø—Ä–æ—Ñ–∏–ª–µ–π
    input_data = {
        "addParentData": False,
        "resultsType": "details",
        "resultsLimit": 50,
        "searchType": "user",
        "searchQueries": [
            "https://www.instagram.com/instagram/",  # –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç Instagram
            "https://www.instagram.com/nike/"        # Nike - –ø—É–±–ª–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
        ],
        "maxRequestRetries": 3,
        "maxConcurrency": 1
    }
    
    print(f"\nüéØ –ó–ê–ü–£–°–ö INSTAGRAM –°–ö–†–ê–ü–ï–†–ê –° –ö–û–ù–ö–†–ï–¢–ù–´–ú–ò URL")
    print("="*60)
    print(f"üîç URL –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–ª—è —Å–∫—Ä–∞–ø–∏–Ω–≥–∞:")
    for url in input_data['searchQueries']:
        print(f"   ‚Ä¢ {url}")
    print(f"üìä –ú–∞–∫—Å–∏–º—É–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {input_data['resultsLimit']}")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–∫—Ç–æ—Ä
        print(f"\nüöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–∫—Ç–æ—Ä {actor_id}...")
        run = client.actor(actor_id).call(run_input=input_data)
        run_id = run['id']
        print(f"‚úÖ –ê–∫—Ç–æ—Ä –∑–∞–ø—É—â–µ–Ω —Å ID: {run_id}")
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        print(f"\n‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
        timeout = 600  # 10 –º–∏–Ω—É—Ç
        start_time = time.time()
        
        while time.time() - start_time < timeout:
            run_info = client.run(run_id).get()
            status = run_info.get('status')
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            if status == 'RUNNING':
                print(f"üèÉ –°—Ç–∞—Ç—É—Å: {status} - –ê–∫—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç...")
            elif status == 'READY':
                print(f"‚è≥ –°—Ç–∞—Ç—É—Å: {status} - –ê–∫—Ç–æ—Ä –≥–æ—Ç–æ–≤–∏—Ç—Å—è...")
            else:
                print(f"üìä –°—Ç–∞—Ç—É—Å: {status}")
            
            if status == 'SUCCEEDED':
                print("‚úÖ –°–∫—Ä–∞–ø–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                break
            elif status in ['FAILED', 'ABORTED']:
                print(f"‚ùå –°–∫—Ä–∞–ø–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π: {status}")
                return None
            
            time.sleep(15)  # –ñ–¥–µ–º 15 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
        else:
            print("‚è∞ –¢–∞–π–º–∞—É—Ç - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–æ—Ä")
            client.run(run_id).abort()
            return None
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        dataset_id = run_info.get('defaultDatasetId')
        if not dataset_id:
            print("‚ùå Dataset ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return None
        
        print(f"\nüìä –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑ –¥–∞—Ç–∞—Å–µ—Ç–∞ {dataset_id}...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞—Ç–∞—Å–µ—Ç–µ
        dataset_info = client.dataset(dataset_id).get()
        total_items = dataset_info.get('itemCount', 0)
        print(f"üìà –í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ: {total_items}")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        dataset_items = client.dataset(dataset_id).list_items()
        items = dataset_items.items
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(items)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        
        if items:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
            print(f"\nüìã –°–¢–†–£–ö–¢–£–†–ê –î–ê–ù–ù–´–•:")
            print("="*50)
            
            first_item = items[0]
            if isinstance(first_item, dict):
                print("üîë –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è:")
                for key in list(first_item.keys())[:15]:  # –ü–µ—Ä–≤—ã–µ 15 –ø–æ–ª–µ–π
                    print(f"   ‚Ä¢ {key}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            print(f"\nüìã –ü–ï–†–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
            print("="*50)
            
            for i, item in enumerate(items[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"\n{i+1}. üì∏ –ü–æ—Å—Ç:")
                
                if isinstance(item, dict):
                    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    if 'shortCode' in item:
                        print(f"   üîó –ö–æ–¥: {item.get('shortCode', 'N/A')}")
                    if 'url' in item:
                        print(f"   üåê URL: {item.get('url', 'N/A')}")
                    if 'type' in item:
                        print(f"   üìù –¢–∏–ø: {item.get('type', 'N/A')}")
                    
                    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                    if 'ownerUsername' in item:
                        print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{item.get('ownerUsername', 'N/A')}")
                    if 'ownerFullName' in item:
                        print(f"   üìõ –ü–æ–ª–Ω–æ–µ –∏–º—è: {item.get('ownerFullName', 'N/A')}")
                    
                    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                    if 'likesCount' in item:
                        print(f"   ‚ù§Ô∏è –õ–∞–π–∫–∏: {item.get('likesCount', 'N/A')}")
                    if 'commentsCount' in item:
                        print(f"   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {item.get('commentsCount', 'N/A')}")
                    
                    # –¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞
                    if 'caption' in item and item['caption']:
                        caption = item['caption']
                        if len(caption) > 100:
                            caption = caption[:100] + "..."
                        print(f"   üìù –¢–µ–∫—Å—Ç: {caption}")
                    
                    # –•–µ—à—Ç–µ–≥–∏
                    if 'hashtags' in item and item['hashtags']:
                        hashtags = item['hashtags'][:5]  # –ü–µ—Ä–≤—ã–µ 5 —Ö–µ—à—Ç–µ–≥–æ–≤
                        print(f"   üè∑Ô∏è –•–µ—à—Ç–µ–≥–∏: {', '.join(hashtags)}")
                    
                    # –î–∞—Ç–∞
                    if 'timestamp' in item:
                        timestamp = item.get('timestamp', 'N/A')
                        print(f"   üìÖ –î–∞—Ç–∞: {timestamp}")
                else:
                    print(f"   {str(item)[:200]}...")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            
            # JSON —Ñ–∞–π–ª
            json_filename = f"instagram_urls_results_{timestamp}.json"
            with open(json_filename, 'w', encoding='utf-8') as f:
                json.dump(items, f, ensure_ascii=False, indent=2)
            print(f"\nüíæ JSON —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {json_filename}")
            
            # CSV —Ñ–∞–π–ª (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
            try:
                df = pd.DataFrame(items)
                csv_filename = f"instagram_urls_results_{timestamp}.csv"
                df.to_csv(csv_filename, index=False, encoding='utf-8')
                print(f"üíæ CSV —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {csv_filename}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ CSV: {e}")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
            print("="*30)
            print(f"üìà –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {len(items)}")
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            if items and isinstance(items[0], dict):
                total_likes = sum(item.get('likesCount', 0) for item in items if item.get('likesCount'))
                total_comments = sum(item.get('commentsCount', 0) for item in items if item.get('commentsCount'))
                unique_users = len(set(item.get('ownerUsername', '') for item in items if item.get('ownerUsername')))
                
                print(f"‚ù§Ô∏è –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤: {total_likes}")
                print(f"üí¨ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {total_comments}")
                print(f"üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {unique_users}")
        
        return items
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

if __name__ == "__main__":
    print("üì∏ INSTAGRAM –°–ö–†–ê–ü–ï–† - –ü–†–ê–í–ò–õ–¨–ù–û–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –° URL")
    print("="*70)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∞–ø–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ
    results = run_instagram_with_urls()
    
    if results:
        print(f"\nüéâ –°–∫—Ä–∞–ø–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–æ–ª—É—á–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        print(f"\nüí° –¢–µ–ø–µ—Ä—å –≤—ã –∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞—à Instagram —Å–∫—Ä–∞–ø–µ—Ä!")
    else:
        print("\n‚ùå –°–∫—Ä–∞–ø–∏–Ω–≥ –Ω–µ —É–¥–∞–ª—Å—è")
