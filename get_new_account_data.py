"""
–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Apify
"""

import os
import json
from datetime import datetime
from dotenv import load_dotenv
from apify_client import ApifyClient
import pandas as pd

load_dotenv()

def get_new_account_data():
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞"""
    
    client = ApifyClient(os.getenv('APIFY_API_TOKEN'))
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –Ω–æ–≤–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É Apify API —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    
    # ID –∞–∫—Ç–æ—Ä–∞ –≤ –Ω–æ–≤–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ
    actor_id = "shu8hvrXbJbY3Eb9W"
    
    print(f"\nüîç –ü–û–õ–£–ß–ï–ù–ò–ï –î–ê–ù–ù–´–• –ò–ó –ù–û–í–û–ì–û –ê–ö–ö–ê–£–ù–¢–ê")
    print("="*50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—É—Å–∫–∏
        runs = client.actor(actor_id).runs().list(limit=5)
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(runs.items)} –∑–∞–ø—É—Å–∫–æ–≤")
        
        # –ò—â–µ–º —É—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å –¥–∞–Ω–Ω—ã–º–∏
        successful_run = None
        for run in runs.items:
            if run.get('status') == 'SUCCEEDED':
                dataset_id = run.get('defaultDatasetId')
                if dataset_id:
                    try:
                        dataset = client.dataset(dataset_id)
                        item_count = dataset.get().get('itemCount', 0)
                        if item_count > 0:
                            successful_run = run
                            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —É—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å {item_count} —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏")
                            print(f"   üÜî Run ID: {run.get('id')}")
                            print(f"   üìÖ –î–∞—Ç–∞: {run.get('startedAt')}")
                            break
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞—Ç–∞—Å–µ—Ç–∞: {e}")
        
        if not successful_run:
            print("‚ùå –£—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return None
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
        dataset_id = successful_run.get('defaultDatasetId')
        print(f"\nüìä –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–∞—Ç–∞—Å–µ—Ç–∞ {dataset_id}...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞—Ç–∞—Å–µ—Ç–µ
        dataset_info = client.dataset(dataset_id).get()
        total_items = dataset_info.get('itemCount', 0)
        print(f"üìà –í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ: {total_items}")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        dataset_items = client.dataset(dataset_id).list_items()
        items = dataset_items.items
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(items)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        
        if items:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
            print(f"\nüìã –°–¢–†–£–ö–¢–£–†–ê –î–ê–ù–ù–´–•:")
            print("="*50)
            
            first_item = items[0]
            if isinstance(first_item, dict):
                print("üîë –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è:")
                for key in list(first_item.keys())[:20]:  # –ü–µ—Ä–≤—ã–µ 20 –ø–æ–ª–µ–π
                    print(f"   ‚Ä¢ {key}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            print(f"\nüìã –ü–ï–†–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
            print("="*50)
            
            for i, item in enumerate(items[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"\n{i+1}. üì∏ –ü–æ—Å—Ç:")
                
                if isinstance(item, dict):
                    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    if 'shortCode' in item:
                        print(f"   üîó –ö–æ–¥: {item.get('shortCode', 'N/A')}")
                    if 'url' in item:
                        print(f"   üåê URL: {item.get('url', 'N/A')}")
                    if 'type' in item:
                        print(f"   üìù –¢–∏–ø: {item.get('type', 'N/A')}")
                    
                    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                    if 'ownerUsername' in item:
                        print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{item.get('ownerUsername', 'N/A')}")
                    if 'ownerFullName' in item:
                        print(f"   üìõ –ü–æ–ª–Ω–æ–µ –∏–º—è: {item.get('ownerFullName', 'N/A')}")
                    
                    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                    if 'likesCount' in item:
                        print(f"   ‚ù§Ô∏è –õ–∞–π–∫–∏: {item.get('likesCount', 'N/A')}")
                    if 'commentsCount' in item:
                        print(f"   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {item.get('commentsCount', 'N/A')}")
                    
                    # –¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞
                    if 'caption' in item and item['caption']:
                        caption = item['caption']
                        if len(caption) > 150:
                            caption = caption[:150] + "..."
                        print(f"   üìù –¢–µ–∫—Å—Ç: {caption}")
                    
                    # –•–µ—à—Ç–µ–≥–∏
                    if 'hashtags' in item and item['hashtags']:
                        hashtags = item['hashtags'][:8]  # –ü–µ—Ä–≤—ã–µ 8 —Ö–µ—à—Ç–µ–≥–æ–≤
                        print(f"   üè∑Ô∏è –•–µ—à—Ç–µ–≥–∏: {', '.join(hashtags)}")
                    
                    # –î–∞—Ç–∞
                    if 'timestamp' in item:
                        timestamp = item.get('timestamp', 'N/A')
                        print(f"   üìÖ –î–∞—Ç–∞: {timestamp}")
                    
                    # –ú–µ–¥–∏–∞
                    if 'displayUrl' in item:
                        print(f"   üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {item.get('displayUrl', 'N/A')[:50]}...")
                else:
                    print(f"   {str(item)[:200]}...")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            
            # JSON —Ñ–∞–π–ª
            json_filename = f"new_account_data_{timestamp}.json"
            with open(json_filename, 'w', encoding='utf-8') as f:
                json.dump(items, f, ensure_ascii=False, indent=2)
            print(f"\nüíæ JSON —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {json_filename}")
            
            # CSV —Ñ–∞–π–ª (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
            try:
                df = pd.DataFrame(items)
                csv_filename = f"new_account_data_{timestamp}.csv"
                df.to_csv(csv_filename, index=False, encoding='utf-8')
                print(f"üíæ CSV —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {csv_filename}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ CSV: {e}")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –î–ê–ù–ù–´–•:")
            print("="*30)
            print(f"üìà –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {len(items)}")
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            if items and isinstance(items[0], dict):
                total_likes = sum(item.get('likesCount', 0) for item in items if item.get('likesCount'))
                total_comments = sum(item.get('commentsCount', 0) for item in items if item.get('commentsCount'))
                unique_users = len(set(item.get('ownerUsername', '') for item in items if item.get('ownerUsername')))
                
                # –¢–∏–ø—ã –ø–æ—Å—Ç–æ–≤
                post_types = {}
                for item in items:
                    post_type = item.get('type', 'Unknown')
                    post_types[post_type] = post_types.get(post_type, 0) + 1
                
                print(f"‚ù§Ô∏è –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤: {total_likes:,}")
                print(f"üí¨ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {total_comments:,}")
                print(f"üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {unique_users}")
                
                print(f"\nüìù –¢–∏–ø—ã –ø–æ—Å—Ç–æ–≤:")
                for post_type, count in post_types.items():
                    print(f"   {post_type}: {count}")
                
                # –¢–æ–ø —Ö–µ—à—Ç–µ–≥–æ–≤
                all_hashtags = []
                for item in items:
                    if item.get('hashtags'):
                        all_hashtags.extend(item['hashtags'])
                
                if all_hashtags:
                    hashtag_counts = {}
                    for hashtag in all_hashtags:
                        hashtag_counts[hashtag] = hashtag_counts.get(hashtag, 0) + 1
                    
                    top_hashtags = sorted(hashtag_counts.items(), key=lambda x: x[1], reverse=True)[:10]
                    print(f"\nüè∑Ô∏è –¢–æ–ø-10 —Ö–µ—à—Ç–µ–≥–æ–≤:")
                    for hashtag, count in top_hashtags:
                        print(f"   #{hashtag}: {count} —Ä–∞–∑")
                
                # –ê–Ω–∞–ª–∏–∑ –¥–∞—Ç
                if items:
                    timestamps = [item.get('timestamp') for item in items if item.get('timestamp')]
                    if timestamps:
                        timestamps.sort()
                        print(f"\nüìÖ –í—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω:")
                        print(f"   –°–∞–º—ã–π —Å—Ç–∞—Ä—ã–π –ø–æ—Å—Ç: {timestamps[0]}")
                        print(f"   –°–∞–º—ã–π –Ω–æ–≤—ã–π –ø–æ—Å—Ç: {timestamps[-1]}")
        
        return items
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

if __name__ == "__main__":
    print("üì∏ –ü–û–õ–£–ß–ï–ù–ò–ï –î–ê–ù–ù–´–• –ò–ó –ù–û–í–û–ì–û –ê–ö–ö–ê–£–ù–¢–ê APIFY")
    print("="*60)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
    results = get_new_account_data()
    
    if results:
        print(f"\nüéâ –î–∞–Ω–Ω—ã–µ –∏–∑ –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã! –í—Å–µ–≥–æ {len(results)} –ø–æ—Å—Ç–æ–≤")
        print(f"\nüí° –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞!")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")
