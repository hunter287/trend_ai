#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Ximilar Fashion API
"""

import os
import requests
from dotenv import load_dotenv

load_dotenv()

def test_ximilar_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Ximilar Fashion API"""
    api_key = os.getenv("XIMILAR_API_KEY")
    
    if not api_key:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω XIMILAR_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º Ximilar Fashion API...")
    
    # –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ª—é–±–æ–µ)
    test_image_url = "https://example.com/test-image.jpg"
    
    payload = {
        "records": [
            {
                "_id": "test_1",
                "_url": test_image_url
            }
        ]
    }
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    headers_formats = [
        {"Authorization": f"Bearer {api_key}", "Content-Type": "application/json"},
        {"Authorization": f"Token {api_key}", "Content-Type": "application/json"},
        {"X-API-Key": api_key, "Content-Type": "application/json"},
        {"Authorization": api_key, "Content-Type": "application/json"}
    ]
    
    for i, headers in enumerate(headers_formats, 1):
        print(f"üîÑ –ü—Ä–æ–±—É–µ–º —Ñ–æ—Ä–º–∞—Ç {i}: {list(headers.keys())}")
        
        try:
            response = requests.post(
                "https://api.ximilar.com/tagging/fashion/v2/detect_tags_all",
                headers=headers,
                json=payload,
                timeout=30
            )
            
            print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
            
            if response.status_code == 200:
                result = response.json()
                print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —ç—Ç–∏–º —Ñ–æ—Ä–º–∞—Ç–æ–º!")
                print(f"üìã –û—Ç–≤–µ—Ç: {result}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
                print(f"üìã –û—Ç–≤–µ—Ç: {response.text[:200]}...")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print()
    
    return False

if __name__ == "__main__":
    success = test_ximilar_api()
    if success:
        print("\nüéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª")
