#!/usr/bin/env python3
"""
–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π Ximilar Fashion Tagger
"""

import os
from dotenv import load_dotenv
from ximilar_fashion_tagger import XimilarFashionTagger

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def print_banner():
    """–ü–µ—á–∞—Ç—å –±–∞–Ω–Ω–µ—Ä–∞"""
    print("""
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                    üè∑Ô∏è  XIMILAR FASHION TAGGING            ‚ïë
‚ïë                                                              ‚ïë
‚ïë  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–¥–µ–∂–¥—ã –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö          ‚ïë
‚ïë  —á–µ—Ä–µ–∑ Ximilar Fashion API —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ MongoDB          ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    """)

def get_ximilar_token():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ Ximilar"""
    token = os.getenv("XIMILAR_API_KEY")
    if not token:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω XIMILAR_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω:")
        print("   export XIMILAR_API_KEY=your_token")
        print("   –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª")
        return None
    return token

def get_mongodb_uri():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ URI MongoDB"""
    default_uri = "mongodb://localhost:27017/"
    print(f"\nüìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MongoDB:")
    print(f"   –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: {default_uri}")
    
    custom_uri = input("   –í–≤–µ–¥–∏—Ç–µ URI MongoDB (Enter –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é): ").strip()
    return custom_uri if custom_uri else default_uri

def get_batch_settings():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–∞–∫–µ—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    print(f"\n‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–∫–µ—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
    
    # –ú–∞–∫—Å–∏–º—É–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    while True:
        try:
            max_images = input("   –ú–∞–∫—Å–∏–º—É–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (Enter –¥–ª—è 50): ").strip()
            if not max_images:
                max_images = 50
            else:
                max_images = int(max_images)
            if max_images > 0:
                break
            else:
                print("   ‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
        except ValueError:
            print("   ‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ")
    
    # –†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞
    while True:
        try:
            batch_size = input("   –†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞ (Enter –¥–ª—è 10): ").strip()
            if not batch_size:
                batch_size = 10
            else:
                batch_size = int(batch_size)
            if batch_size > 0:
                break
            else:
                print("   ‚ùå –†–∞–∑–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
        except ValueError:
            print("   ‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ")
    
    return max_images, batch_size

def confirm_settings(max_images, batch_size, mongodb_uri):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    print(f"\n‚öôÔ∏è  –ù–ê–°–¢–†–û–ô–ö–ò –¢–ï–ì–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"   üìä –ú–∞–∫—Å–∏–º—É–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {max_images}")
    print(f"   üì¶ –†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞: {batch_size}")
    print(f"   üóÑÔ∏è  MongoDB URI: {mongodb_uri}")
    
    # –û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
    estimated_time = max_images * 2  # –ü—Ä–∏–º–µ—Ä–Ω–æ 2 —Å–µ–∫—É–Ω–¥—ã –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    if estimated_time < 60:
        time_str = f"{estimated_time} —Å–µ–∫—É–Ω–¥"
    else:
        time_str = f"{estimated_time//60} –º–∏–Ω—É—Ç {estimated_time%60} —Å–µ–∫—É–Ω–¥"
    
    print(f"   ‚è±Ô∏è  –û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è: {time_str}")
    
    while True:
        confirm = input(f"\n   –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ").strip().lower()
        if confirm in ['y', 'yes', '–¥–∞', '–¥']:
            return True
        elif confirm in ['n', 'no', '–Ω–µ—Ç', '–Ω']:
            return False
        else:
            print("   ‚ùå –í–≤–µ–¥–∏—Ç–µ 'y' –∏–ª–∏ 'n'")

def show_progress():
    """–ü–æ–∫–∞–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
    print(f"\nüîÑ –ü–†–û–¶–ï–°–° –¢–ï–ì–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"   1. üîç –ü–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–µ–∑ —Ç–µ–≥–æ–≤")
    print(f"   2. üè∑Ô∏è  –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Ximilar API")
    print(f"   3. üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–≥–æ–≤ –≤ MongoDB")
    print(f"   4. üìä –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    print(f"   " + "="*50)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print_banner()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω Ximilar
    ximilar_token = get_ximilar_token()
    if not ximilar_token:
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    mongodb_uri = get_mongodb_uri()
    max_images, batch_size = get_batch_settings()
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if not confirm_settings(max_images, batch_size, mongodb_uri):
        print("‚ùå –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    show_progress()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ–≥–≥–µ—Ä –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
    try:
        tagger = XimilarFashionTagger(ximilar_token, mongodb_uri)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print(f"\nüìä –¢–ï–ö–£–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        tagger.get_tagged_images_stats()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        print(f"\nüöÄ –ó–ê–ü–£–°–ö –¢–ï–ì–ò–†–û–í–ê–ù–ò–Ø...")
        success = tagger.tag_batch_images(batch_size, max_images)
        
        if success:
            print(f"\nüéâ –¢–ï–ì–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
            print(f"üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            tagger.get_tagged_images_stats()
        else:
            print(f"\n‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –¢–ï–ì–ò–†–û–í–ê–ù–ò–ò")
            
    except KeyboardInterrupt:
        print(f"\n‚èπÔ∏è  –¢–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
