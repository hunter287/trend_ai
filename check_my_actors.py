#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫—Ç–æ—Ä–æ–≤ –≤ Apify –∞–∫–∫–∞—É–Ω—Ç–µ
"""

from apify_client import ApifyClient
from dotenv import load_dotenv
import os
import json

load_dotenv()

def check_my_actors():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–∫—Ç–æ—Ä—ã –≤ –∞–∫–∫–∞—É–Ω—Ç–µ"""
    try:
        client = ApifyClient(os.getenv('APIFY_API_TOKEN'))
        
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–∫—Ç–æ—Ä—ã –≤ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = client.user().get()
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info.get('username', 'N/A')}")
        print(f"üìß Email: {user_info.get('email', 'N/A')}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–æ—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(f"\nüìã –í–ê–®–ò –ê–ö–¢–û–†–´:")
        print("="*50)
        
        actors = client.actors().list()
        if actors.items:
            for i, actor in enumerate(actors.items, 1):
                print(f"\n{i}. üé≠ –ê–∫—Ç–æ—Ä:")
                print(f"   ‚Ä¢ ID: {actor.get('id', 'N/A')}")
                print(f"   ‚Ä¢ –ò–º—è: {actor.get('name', 'N/A')}")
                print(f"   ‚Ä¢ –í–µ—Ä—Å–∏—è: {actor.get('versionNumber', 'N/A')}")
                print(f"   ‚Ä¢ –°—Ç–∞—Ç—É—Å: {actor.get('isPublic', 'Private')}")
                print(f"   ‚Ä¢ –°–æ–∑–¥–∞–Ω: {actor.get('createdAt', 'N/A')}")
                print(f"   ‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω: {actor.get('modifiedAt', 'N/A')}")
                
                # –û–ø–∏—Å–∞–Ω–∏–µ
                if actor.get('description'):
                    desc = actor['description'][:100] + "..." if len(actor['description']) > 100 else actor['description']
                    print(f"   ‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: {desc}")
                
                # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—É—Å–∫–æ–≤
                if actor.get('stats'):
                    stats = actor['stats']
                    print(f"   ‚Ä¢ –ó–∞–ø—É—Å–∫–æ–≤: {stats.get('totalRuns', 0)}")
                    print(f"   ‚Ä¢ –£—Å–ø–µ—à–Ω—ã—Ö: {stats.get('successfulRuns', 0)}")
                    print(f"   ‚Ä¢ –ù–µ—É–¥–∞—á–Ω—ã—Ö: {stats.get('failedRuns', 0)}")
        else:
            print("‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞–∫—Ç–æ—Ä–æ–≤")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—É–±–ª–∏—á–Ω—ã—Ö –∞–∫—Ç–æ—Ä–æ–≤ (–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ)
        print(f"\nüåê –ü–û–ü–£–õ–Ø–†–ù–´–ï –ü–£–ë–õ–ò–ß–ù–´–ï –ê–ö–¢–û–†–´:")
        print("="*50)
        
        public_actors = client.actors().list(limit=10, isPublic=True)
        if public_actors.items:
            for i, actor in enumerate(public_actors.items, 1):
                print(f"\n{i}. üåç –ü—É–±–ª–∏—á–Ω—ã–π –∞–∫—Ç–æ—Ä:")
                print(f"   ‚Ä¢ ID: {actor.get('id', 'N/A')}")
                print(f"   ‚Ä¢ –ò–º—è: {actor.get('name', 'N/A')}")
                print(f"   ‚Ä¢ –ê–≤—Ç–æ—Ä: {actor.get('username', 'N/A')}")
                print(f"   ‚Ä¢ –ó–∞–ø—É—Å–∫–æ–≤: {actor.get('stats', {}).get('totalRuns', 0)}")
                
                # –û–ø–∏—Å–∞–Ω–∏–µ
                if actor.get('description'):
                    desc = actor['description'][:80] + "..." if len(actor['description']) > 80 else actor['description']
                    print(f"   ‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: {desc}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—É–±–ª–∏—á–Ω—ã—Ö –∞–∫—Ç–æ—Ä–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ Instagram –∞–∫—Ç–æ—Ä—ã
        print(f"\nüì∏ INSTAGRAM –ê–ö–¢–û–†–´:")
        print("="*30)
        
        instagram_actors = [
            "apify/instagram-scraper",
            "shu8hvrXbJbY3Eb9W",
            "apify/instagram-hashtag-scraper",
            "apify/instagram-profile-scraper"
        ]
        
        for actor_id in instagram_actors:
            try:
                actor_info = client.actor(actor_id).get()
                print(f"\n‚úÖ {actor_id}:")
                print(f"   ‚Ä¢ –ò–º—è: {actor_info.get('name', 'N/A')}")
                print(f"   ‚Ä¢ –°—Ç–∞—Ç—É—Å: {'–ü—É–±–ª–∏—á–Ω—ã–π' if actor_info.get('isPublic') else '–ü—Ä–∏–≤–∞—Ç–Ω—ã–π'}")
                print(f"   ‚Ä¢ –ó–∞–ø—É—Å–∫–æ–≤: {actor_info.get('stats', {}).get('totalRuns', 0)}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ö–µ–º—É –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                if actor_info.get('inputSchema'):
                    schema = actor_info['inputSchema']
                    if schema.get('properties'):
                        print(f"   ‚Ä¢ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {list(schema['properties'].keys())[:5]}...")
                
            except Exception as e:
                print(f"‚ùå {actor_id}: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω ({e})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—É—Å–∫–∏
        print(f"\nüìä –ü–û–°–õ–ï–î–ù–ò–ï –ó–ê–ü–£–°–ö–ò:")
        print("="*25)
        
        runs = client.runs().list(limit=5)
        if runs.items:
            for i, run in enumerate(runs.items, 1):
                print(f"\n{i}. üèÉ –ó–∞–ø—É—Å–∫:")
                print(f"   ‚Ä¢ ID: {run.get('id', 'N/A')}")
                print(f"   ‚Ä¢ –ê–∫—Ç–æ—Ä: {run.get('actorId', 'N/A')}")
                print(f"   ‚Ä¢ –°—Ç–∞—Ç—É—Å: {run.get('status', 'N/A')}")
                print(f"   ‚Ä¢ –°–æ–∑–¥–∞–Ω: {run.get('createdAt', 'N/A')}")
                print(f"   ‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω: {run.get('finishedAt', 'N/A')}")
                
                # –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
                if run.get('startedAt') and run.get('finishedAt'):
                    import datetime
                    start = datetime.datetime.fromisoformat(run['startedAt'].replace('Z', '+00:00'))
                    end = datetime.datetime.fromisoformat(run['finishedAt'].replace('Z', '+00:00'))
                    duration = (end - start).total_seconds()
                    print(f"   ‚Ä¢ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {duration:.1f} —Å–µ–∫—É–Ω–¥")
        else:
            print("‚ùå –ù–µ—Ç –∑–∞–ø—É—Å–∫–æ–≤")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = check_my_actors()
    if success:
        print(f"\nüéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print(f"\nüí• –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")









