#!/usr/bin/env python3
"""
–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è Instagram Selenium –ø–∞—Ä—Å–µ—Ä–∞
"""

import os
from dotenv import load_dotenv
from instagram_selenium_parser import InstagramSeleniumParser

load_dotenv()

def get_parsing_settings():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞"""
    print("üîß –ù–ê–°–¢–†–û–ô–ö–ò SELENIUM –ü–ê–†–°–ï–†–ê")
    print("=" * 50)
    
    # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    username = input("üë§ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Instagram: ").strip()
    if not username:
        print("‚ùå –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ")
        return None
    
    # –ü–∞—Ä–æ–ª—å
    password = input("üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å Instagram: ").strip()
    if not password:
        print("‚ùå –ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω")
        return None
    
    # –õ–∏–º–∏—Ç –ø–æ—Å—Ç–æ–≤
    print(f"\nüìä –õ–∏–º–∏—Ç –ø–æ—Å—Ç–æ–≤ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞:")
    print(f"   ‚Ä¢ 10-50: –ë—ã—Å—Ç—Ä–æ (2-5 –º–∏–Ω)")
    print(f"   ‚Ä¢ 100-200: –°—Ä–µ–¥–Ω–µ (10-20 –º–∏–Ω)")
    print(f"   ‚Ä¢ 500-1000: –ú–µ–¥–ª–µ–Ω–Ω–æ (30+ –º–∏–Ω)")
    
    while True:
        try:
            posts_limit = input("   –õ–∏–º–∏—Ç –ø–æ—Å—Ç–æ–≤ (Enter –¥–ª—è 100): ").strip()
            if not posts_limit:
                posts_limit = 100
            else:
                posts_limit = int(posts_limit)
            
            if posts_limit > 0:
                break
            else:
                print("   ‚ùå –õ–∏–º–∏—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
        except ValueError:
            print("   ‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ")
    
    # –†–µ–∂–∏–º –±—Ä–∞—É–∑–µ—Ä–∞
    print(f"\nüñ•Ô∏è –†–µ–∂–∏–º –±—Ä–∞—É–∑–µ—Ä–∞:")
    print(f"   ‚Ä¢ headless: –ë–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–±—ã—Å—Ç—Ä–µ–µ)")
    print(f"   ‚Ä¢ visible: –° –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º (–º–µ–¥–ª–µ–Ω–Ω–µ–µ, –Ω–æ –≤–∏–¥–Ω–æ –ø—Ä–æ—Ü–µ—Å—Å)")
    
    headless_choice = input("   –†–µ–∂–∏–º (Enter –¥–ª—è headless): ").strip().lower()
    headless = headless_choice not in ["visible", "v", "no", "n"]
    
    return {
        "username": username,
        "password": password,
        "posts_limit": posts_limit,
        "headless": headless
    }

def confirm_settings(settings):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    print(f"\n‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò –ü–ê–†–°–ò–ù–ì–ê:")
    print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{settings['username']}")
    print(f"   üì• –ú–∞–∫—Å. –ø–æ—Å—Ç–æ–≤: {settings['posts_limit']}")
    print(f"   üñ•Ô∏è –†–µ–∂–∏–º –±—Ä–∞—É–∑–µ—Ä–∞: {'headless' if settings['headless'] else 'visible'}")
    print(f"   üóÑÔ∏è MongoDB URI: mongodb://localhost:27017/")
    
    # –û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
    estimated_time = settings['posts_limit'] * 2  # ~2 —Å–µ–∫—É–Ω–¥—ã –Ω–∞ –ø–æ—Å—Ç
    if estimated_time < 60:
        time_str = f"{estimated_time} —Å–µ–∫"
    else:
        time_str = f"{estimated_time // 60} –º–∏–Ω {estimated_time % 60} —Å–µ–∫"
    
    print(f"   ‚è±Ô∏è –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è: {time_str}")
    
    confirm = input(f"\n   –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ").strip().lower()
    return confirm in ["y", "yes", "–¥–∞", "–¥"]

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ INSTAGRAM SELENIUM –ü–ê–†–°–ï–†")
    print("=" * 50)
    print("üìã –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:")
    print("   ‚Ä¢ –ü–∞—Ä—Å–∏–Ω–≥ –ª—é–±—ã—Ö –ø—É–±–ª–∏—á–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    print("   ‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π")
    print("   ‚Ä¢ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    print("   ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ MongoDB")
    print("   ‚Ä¢ –û–±—Ö–æ–¥ –ª–∏–º–∏—Ç–æ–≤ API")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    settings = get_parsing_settings()
    if not settings:
        return
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    if not confirm_settings(settings):
        print("‚ùå –ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–º–µ–Ω–µ–Ω")
        return
    
    print(f"\nüîÑ –ü–†–û–¶–ï–°–° –ü–ê–†–°–ò–ù–ì–ê:")
    print(f"   1. üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WebDriver")
    print(f"   2. üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Instagram")
    print(f"   3. üîç –ü–∞—Ä—Å–∏–Ω–≥ –∞–∫–∫–∞—É–Ω—Ç–∞ @{settings['username']}")
    print(f"   4. üñºÔ∏è –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    print(f"   5. ‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    print(f"   6. üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ MongoDB")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞
    parser = InstagramSeleniumParser()
    
    # –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞
    success = parser.run_full_parsing(
        username=settings['username'],
        password=settings['password'],
        posts_limit=settings['posts_limit']
    )
    
    if success:
        print("\nüéâ –ü–ê–†–°–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        print("üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ MongoDB –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    else:
        print("\n‚ùå –ü–ê–†–°–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù –° –û–®–ò–ë–ö–ê–ú–ò")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")

if __name__ == "__main__":
    main()
