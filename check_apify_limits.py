#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ Apify API
"""

from apify_client import ApifyClient
from dotenv import load_dotenv
import os

load_dotenv()

def check_limits():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫–∫–∞—É–Ω—Ç–∞"""
    try:
        client = ApifyClient(os.getenv('APIFY_API_TOKEN'))
        
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ Apify...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = client.user().get()
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info.get('username', 'N/A')}")
        print(f"üìß Email: {user_info.get('email', 'N/A')}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ
        subscription = user_info.get('subscription', {})
        print(f"üí≥ –ü–ª–∞–Ω: {subscription.get('plan', 'N/A')}")
        print(f"üí∞ –°—Ç–∞—Ç—É—Å: {subscription.get('status', 'N/A')}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        usage = client.user().usage()
        print(f"üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print(f"   ‚Ä¢ –ó–∞–ø—Ä–æ—Å—ã –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ: {usage.get('requestsThisMonth', 'N/A')}")
        print(f"   ‚Ä¢ –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤: {usage.get('requestsLimit', 'N/A')}")
        print(f"   ‚Ä¢ –û—Å—Ç–∞–ª–æ—Å—å –∑–∞–ø—Ä–æ—Å–æ–≤: {usage.get('requestsRemaining', 'N/A')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏ –ª–∏–º–∏—Ç
        remaining = usage.get('requestsRemaining', 0)
        if remaining <= 0:
            print("‚ùå –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å—á–µ—Ä–ø–∞–Ω!")
            print("üí° –†–µ—à–µ–Ω–∏—è:")
            print("   1. –û–±–Ω–æ–≤–∏—Ç—å –ø–ª–∞–Ω –Ω–∞ https://console.apify.com/account/billing")
            print("   2. –î–æ–∂–¥–∞—Ç—å—Å—è —Å–±—Ä–æ—Å–∞ –ª–∏–º–∏—Ç–∞ (1 —á–∏—Å–ª–∞ –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞)")
            print("   3. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç Apify")
        else:
            print(f"‚úÖ –û—Å—Ç–∞–ª–æ—Å—å {remaining} –∑–∞–ø—Ä–æ—Å–æ–≤")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_limits()


