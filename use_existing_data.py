#!/usr/bin/env python3
"""
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ Apify –±–µ–∑ –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
"""

import json
import os
from pathlib import Path
from dotenv import load_dotenv
from instagram_parser import InstagramParser

load_dotenv()
load_dotenv('mongodb_config.env')

def find_existing_data():
    """–ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö JSON —Ñ–∞–π–ª–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏"""
    json_files = list(Path(".").glob("*account_data_*.json"))
    if json_files:
        latest_file = max(json_files, key=lambda x: x.stat().st_mtime)
        print(f"üìÅ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {latest_file}")
        return latest_file
    return None

def use_existing_data():
    """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ò—â–µ–º JSON —Ñ–∞–π–ª—ã
    json_file = find_existing_data()
    if not json_file:
        print("‚ùå JSON —Ñ–∞–π–ª—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return False
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    with open(json_file, 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(data)} –ø–æ—Å—Ç–æ–≤")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä (–±–µ–∑ —Ç–æ–∫–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã)
    parser = InstagramParser("dummy_token", os.getenv('MONGODB_URI', 'mongodb://trend_ai_user:|#!x1K52H.0{8d3@localhost:27017/instagram_gallery'))
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
    if not parser.connect_mongodb():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MongoDB")
        return False
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    print("üñºÔ∏è –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    image_data = parser.extract_image_urls(data)
    
    if not image_data:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        return False
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    print("‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    downloaded_data = parser.download_images(image_data, max_images=50)
    
    if not downloaded_data:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        return False
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ MongoDB
    print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ MongoDB...")
    parser.save_to_mongodb(downloaded_data, "linda.sza")
    
    # –°–æ–∑–¥–∞–µ–º HTML –≥–∞–ª–µ—Ä–µ—é
    print("üåê –°–æ–∑–¥–∞–Ω–∏–µ HTML –≥–∞–ª–µ—Ä–µ–∏...")
    parser.create_gallery_html(downloaded_data, "linda.sza")
    
    print("‚úÖ –ì–æ—Ç–æ–≤–æ! –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ")
    return True

if __name__ == "__main__":
    use_existing_data()


