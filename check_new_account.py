"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Apify –∏ –ø–æ–∏—Å–∫ —Ä–∞–±–æ—á–µ–≥–æ –∞–∫—Ç–æ—Ä–∞ –¥–ª—è @linda.sza
"""

import os
import json
from datetime import datetime
from dotenv import load_dotenv
from apify_client import ApifyClient

load_dotenv()

def check_new_account():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç Apify"""
    
    client = ApifyClient(os.getenv('APIFY_API_TOKEN'))
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –Ω–æ–≤–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É Apify API —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    print(f"\nüë§ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ù–û–í–û–ú –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï")
    print("="*50)
    
    try:
        user = client.user().get()
        print(f"üìß Email: {user.get('email', 'N/A')}")
        print(f"üÜî ID: {user.get('id', 'N/A')}")
        print(f"üí∞ –ú–µ—Å—è—á–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: {user.get('monthlyUsage', {}).get('compute', 0)} –µ–¥–∏–Ω–∏—Ü")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {e}")
        return None
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–æ—Ä–æ–≤
    print(f"\nüé≠ –ê–ö–¢–û–†–´ –í –ù–û–í–û–ú –ê–ö–ö–ê–£–ù–¢–ï")
    print("="*40)
    
    try:
        actors = client.actors().list(limit=20)
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(actors.items)} –∞–∫—Ç–æ—Ä–æ–≤:")
        
        for i, actor in enumerate(actors.items):
            print(f"\n{i+1}. üé≠ {actor.get('name', 'N/A')}")
            print(f"   üÜî ID: {actor.get('id', 'N/A')}")
            print(f"   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {(actor.get('description', 'N/A') or 'N/A')[:100]}...")
            print(f"   üë§ –ê–≤—Ç–æ—Ä: {actor.get('username', 'N/A')}")
            print(f"   üìÖ –°–æ–∑–¥–∞–Ω: {actor.get('createdAt', 'N/A')}")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            stats = actor.get('stats', {})
            print(f"   üèÉ –ó–∞–ø—É—Å–∫–æ–≤: {stats.get('totalRuns', 0)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É—Å–ø–µ—à–Ω—ã–µ –∑–∞–ø—É—Å–∫–∏
            try:
                runs = client.actor(actor['id']).runs().list(limit=5)
                successful_runs = [run for run in runs.items if run.get('status') == 'SUCCEEDED']
                if successful_runs:
                    print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤: {len(successful_runs)}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø—É—Å–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏
                    for run in successful_runs[:2]:
                        if run.get('defaultDatasetId'):
                            try:
                                dataset = client.dataset(run['defaultDatasetId'])
                                item_count = dataset.get().get('itemCount', 0)
                                if item_count > 0:
                                    print(f"   üìä –ü–æ—Å–ª–µ–¥–Ω–∏–π —É—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—É—Å–∫: {item_count} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                                    break
                            except:
                                pass
                else:
                    print(f"   ‚ùå –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤: 0")
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø—É—Å–∫–æ–≤: {e}")
        
        return actors.items
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–æ—Ä–æ–≤: {e}")
        return []

def find_linda_sza_actor(actors):
    """–ò—â–µ—Ç –∞–∫—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–ª —Å @linda.sza"""
    
    print(f"\nüîç –ü–û–ò–°–ö –ê–ö–¢–û–†–ê –î–õ–Ø @linda.sza")
    print("="*40)
    
    client = ApifyClient(os.getenv('APIFY_API_TOKEN'))
    linda_actors = []
    
    for actor in actors:
        actor_id = actor.get('id')
        actor_name = actor.get('name', 'N/A')
        
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–æ—Ä: {actor_name} ({actor_id})")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—É—Å–∫–∏
            runs = client.actor(actor_id).runs().list(limit=10)
            
            for run in runs.items:
                if run.get('status') == 'SUCCEEDED':
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                    input_data = run.get('options', {}).get('input', {})
                    search_queries = input_data.get('searchQueries', [])
                    
                    # –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è linda.sza
                    for query in search_queries:
                        if isinstance(query, str) and 'linda.sza' in query.lower():
                            print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω –∑–∞–ø—É—Å–∫ —Å @linda.sza!")
                            print(f"   üÜî Run ID: {run.get('id')}")
                            print(f"   üìÖ –î–∞—Ç–∞: {run.get('startedAt')}")
                            
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                            dataset_id = run.get('defaultDatasetId')
                            if dataset_id:
                                try:
                                    dataset = client.dataset(dataset_id)
                                    item_count = dataset.get().get('itemCount', 0)
                                    print(f"   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {item_count}")
                                    
                                    if item_count > 0:
                                        linda_actors.append({
                                            'actor_id': actor_id,
                                            'actor_name': actor_name,
                                            'run_id': run.get('id'),
                                            'dataset_id': dataset_id,
                                            'item_count': item_count,
                                            'started_at': run.get('startedAt')
                                        })
                                except Exception as e:
                                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {e}")
                            break
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–æ—Ä–∞: {e}")
    
    return linda_actors

def get_data_from_linda_actor(linda_actor):
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –∞–∫—Ç–æ—Ä–∞ –¥–ª—è @linda.sza"""
    
    print(f"\nüìä –ü–û–õ–£–ß–ï–ù–ò–ï –î–ê–ù–ù–´–• –ò–ó –ê–ö–¢–û–†–ê {linda_actor['actor_name']}")
    print("="*60)
    
    client = ApifyClient(os.getenv('APIFY_API_TOKEN'))
    
    try:
        dataset_id = linda_actor['dataset_id']
        print(f"üìä –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–∞—Ç–∞—Å–µ—Ç–∞ {dataset_id}...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞—Ç–∞—Å–µ—Ç–µ
        dataset_info = client.dataset(dataset_id).get()
        total_items = dataset_info.get('itemCount', 0)
        print(f"üìà –í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ: {total_items}")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        dataset_items = client.dataset(dataset_id).list_items()
        items = dataset_items.items
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(items)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        
        if items:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            print(f"\nüìã –ü–ï–†–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
            print("="*50)
            
            for i, item in enumerate(items[:3]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"\n{i+1}. üì∏ –ü–æ—Å—Ç:")
                
                if isinstance(item, dict):
                    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    if 'shortCode' in item:
                        print(f"   üîó –ö–æ–¥: {item.get('shortCode', 'N/A')}")
                    if 'url' in item:
                        print(f"   üåê URL: {item.get('url', 'N/A')}")
                    if 'type' in item:
                        print(f"   üìù –¢–∏–ø: {item.get('type', 'N/A')}")
                    
                    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                    if 'ownerUsername' in item:
                        print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{item.get('ownerUsername', 'N/A')}")
                    if 'ownerFullName' in item:
                        print(f"   üìõ –ü–æ–ª–Ω–æ–µ –∏–º—è: {item.get('ownerFullName', 'N/A')}")
                    
                    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                    if 'likesCount' in item:
                        print(f"   ‚ù§Ô∏è –õ–∞–π–∫–∏: {item.get('likesCount', 'N/A')}")
                    if 'commentsCount' in item:
                        print(f"   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {item.get('commentsCount', 'N/A')}")
                    
                    # –¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞
                    if 'caption' in item and item['caption']:
                        caption = item['caption']
                        if len(caption) > 100:
                            caption = caption[:100] + "..."
                        print(f"   üìù –¢–µ–∫—Å—Ç: {caption}")
                    
                    # –î–∞—Ç–∞
                    if 'timestamp' in item:
                        timestamp = item.get('timestamp', 'N/A')
                        print(f"   üìÖ –î–∞—Ç–∞: {timestamp}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            
            # JSON —Ñ–∞–π–ª
            json_filename = f"linda_sza_new_account_{timestamp}.json"
            with open(json_filename, 'w', encoding='utf-8') as f:
                json.dump(items, f, ensure_ascii=False, indent=2)
            print(f"\nüíæ JSON —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {json_filename}")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –î–ê–ù–ù–´–•:")
            print("="*30)
            print(f"üìà –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {len(items)}")
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            if items and isinstance(items[0], dict):
                total_likes = sum(item.get('likesCount', 0) for item in items if item.get('likesCount'))
                total_comments = sum(item.get('commentsCount', 0) for item in items if item.get('commentsCount'))
                unique_users = len(set(item.get('ownerUsername', '') for item in items if item.get('ownerUsername')))
                
                print(f"‚ù§Ô∏è –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤: {total_likes:,}")
                print(f"üí¨ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {total_comments:,}")
                print(f"üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {unique_users}")
        
        return items
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

if __name__ == "__main__":
    print("üîç –ü–†–û–í–ï–†–ö–ê –ù–û–í–û–ì–û –ê–ö–ö–ê–£–ù–¢–ê APIFY")
    print("="*50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
    actors = check_new_account()
    
    if actors:
        # –ò—â–µ–º –∞–∫—Ç–æ—Ä –¥–ª—è @linda.sza
        linda_actors = find_linda_sza_actor(actors)
        
        if linda_actors:
            print(f"\nüéâ –ù–∞–π–¥–µ–Ω–æ {len(linda_actors)} –∞–∫—Ç–æ—Ä–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ @linda.sza!")
            
            # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π –∞–∫—Ç–æ—Ä
            best_actor = linda_actors[0]
            print(f"\nüìä –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫—Ç–æ—Ä: {best_actor['actor_name']}")
            print(f"   üÜî ID: {best_actor['actor_id']}")
            print(f"   üìä –≠–ª–µ–º–µ–Ω—Ç–æ–≤: {best_actor['item_count']}")
            print(f"   üìÖ –î–∞—Ç–∞: {best_actor['started_at']}")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            data = get_data_from_linda_actor(best_actor)
            
            if data:
                print(f"\nüéâ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ @linda.sza –∏–∑ –Ω–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞!")
            else:
                print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        else:
            print(f"\n‚ùå –ê–∫—Ç–æ—Ä—ã —Å –¥–∞–Ω–Ω—ã–º–∏ @linda.sza –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–æ—Ä–æ–≤")
